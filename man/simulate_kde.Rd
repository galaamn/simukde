% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{simulate_kde}
\alias{simulate_kde}
\title{Simulation with Kernel Density Estimation}
\usage{
simulate_kde(x, n = 100, distr = "norm", const.only = FALSE,
  seed = NULL, parallel = TRUE, ...)
}
\arguments{
\item{x}{a numeric vector, matrix or data frame; data.}

\item{n}{integer; the number of random values will be generated.}

\item{distr}{character; auxiliary distribution name. See details.}

\item{const.only}{logical; if \code{TRUE}, the constant of Accept Reject Method will be returned.}

\item{seed}{a single value, interpreted as an integer, or \code{NULL} (default).}

\item{parallel}{logical; if \code{TRUE} (default) parallel generator will be worked.}

\item{...}{other parameters for functions \code{\link[ks]{kde}}.}
}
\value{
list of given data, simulated values, kernel density estimation and the constant of Accept Reject Method when \code{const.only} is \code{FALSE} (default).
}
\description{
Generates random values from a univariate and multivariate continuous distribution by using kernel density estimation based on a sample. The function uses Accept Reject Method.
}
\details{
Such function uses the function \code{\link[ks]{kde}} as kernel density estimator.

Accept Reject Method is used to simulate random variables.
Following code named distributions can be used as a value of the argument \code{distr} and an auxiliary distribution of the simulation method.
For univariate distributions:
\describe{
\item{norm}{normal distribution (default), \eqn{(-\infty,+\infty)}}
\item{exp}{exponential distribution, \eqn{(0,+\infty)}}
\item{unif}{uniform distribution, \eqn{(a,b)}}
}
For multivariate distributions, "norm" (multivariate normal distribution) is used.
}
\examples{
\dontrun{

## 1-dimensional data
data(faithful)
hist(faithful$eruptions)
res <- simukde::simulate_kde(x = faithful$eruptions, n = 1000)
hist(res$random.values)

## 2-dimensional data
data(faithful)
res <- simukde::simulate_kde(x = faithful, n = 100)
plot(res$kde, display = "filled.contour2")
points(x = res$random.values, cex = 0.25, pch = 16, col = "green")
points(x = faithful, cex = 0.25, pch = 16, col = "black")
}
}
\seealso{
\code{\link[ks]{kde}}
}
